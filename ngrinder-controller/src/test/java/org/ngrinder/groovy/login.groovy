import HTTPClient.CookieModule
import HTTPClient.HTTPResponse
import HTTPClient.NVPair
import net.grinder.plugin.http.HTTPPluginControl
import net.grinder.plugin.http.HTTPRequest
import net.grinder.script.GTest
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
import org.json.JSONArray
import org.junit.Before
import org.junit.Test
import org.junit.runner.RunWith

import static net.grinder.script.Grinder.grinder
import static org.hamcrest.Matchers.is
import static org.junit.Assert.assertThat
import static org.junit.Assert.assertTrue

import org.ngrinder.recorder.RecorderUtils

/**
 * A simple example using the HTTP plugin that shows the retrieval of a
 * single page via HTTP.
 *
 * This script is automatically generated by ngrinder.
 *
 * @author Gisoo Gwon
 */
@RunWith(GrinderRunner)
class Login {
    public static GTest test
    public static HTTPRequest request
    public Object cookies = []

    @BeforeProcess
    public static void beforeProcess() {
        HTTPPluginControl.getConnectionDefaults().timeout = 6000
        test = new GTest(1, "login test")
        request = new HTTPRequest()
        test.record(request);
    }

    @BeforeThread
    public void beforeThread() {
        grinder.statistics.delayReports = true;

        // reset to the all cookies
        def threadContext = HTTPPluginControl.getThreadHTTPClientContext()
        cookies = CookieModule.listAllCookies(threadContext)
        cookies.each {
            CookieModule.removeCookie(it, threadContext)
        }

        // do login & save to the login info in cookies
        NVPair[] params = [new NVPair("name", "13637478622"), new NVPair("passwd", "NWfp+DwKkvhs6NXTqat7dxq+cogJXoZ2mLPDM8EYIWK6wjNIAzunD6HTeERWfrA4wAil4rNgacsSn8/EVva9X+Orh00pHESCmed7SITrZJlxBWq4gWrgWSix9C1tMQOnvuxFfkP+4IW7Sk9bw2SBZjljfzmRxCx/iwmpYKDcRi0=")];
        HTTPResponse res = request.POST("https://sc.jujixiaolongxia.com/api/v1/user/login/login", params);

        def json_object = RecorderUtils.parseRequestToJson(new String(res.data))
        assertTrue(json_object.getInt("status") > 0)

        cookies = CookieModule.listAllCookies(threadContext)
    }

    @Before
    public void before() {
        // set cookies for login state
        def threadContext = HTTPPluginControl.getThreadHTTPClientContext()
        cookies.each {
            CookieModule.addCookie(it, threadContext)
            grinder.logger.info("{}", it)
        }
    }

    @Test
    public void test() {
        def orderId = this.getOrderId()

        String uri = "https://sc.jujixiaolongxia.com/api/v1/user/cashier/pay"

        NVPair[] params = [new NVPair("payname", "orders"),
                           new NVPair("payids", orderId),
                           new NVPair("wallet_money_check_11", "money"),
                           new NVPair("pay_pwd_set", "123456")
        ];
        HTTPResponse res = request.POST(uri, params)

        if (res.statusCode == 301 || res.statusCode == 302) {
            grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", result.statusCode);
        } else {
            assertThat(res.statusCode, is(200));
        }

        def json_object = RecorderUtils.parseRequestToJson(new String(res.data))
        assertTrue(json_object.getInt("status") > 0)
    }

    public String getOrderId() {
        String url = "https://sc.jujixiaolongxia.com/api/v1/buyer/order/Create";

        NVPair[] params = [new NVPair("address_id", "1"),
                           new NVPair("logtype[1-1-0-0-1-0][1]", "1"),
                           new NVPair("is_private", "1"),
                           new NVPair("product_book_pay_type", "1"),
                           new NVPair("op_ids", "2d746858a75da62fa6115f1e0cedda90"),
                           new NVPair("num", "1"),
                           new NVPair("active", "group"),
                           new NVPair("get_share_way", "1"),
                           new NVPair("active_id", "1956")
        ];
        HTTPResponse res = request.POST(url, params)

        def json_object = RecorderUtils.parseRequestToJson(new String(res.data))
        assertTrue(json_object.getInt("status") > 0)

        String orderId = returnData.get("data").asJsonObject.get("order_id").asString
        return orderId
    }

    private void loadData(String paramStr){
        def json_object = RecorderUtils.parseRequestToJson(paramStr)
        String path = json_object.getString("path")
        int hasHead = json_object.getInt("hasHead")
        JSONArray params = json_object.getJSONArray("paramsList")
        File file = new File(getClass().protectionDomain.codeSource.location.path+ path)
        assertTrue(file.exists())
        //声明n个list存放解析结果
        Map<String,List<String>> rstMap = new HashMap<>()
        for(int i=0; i< params.length();i++){
            rstMap.put(i as String,new ArrayList<String>())
        }
        file.eachLine("UTF-8", 1) { line,num ->
            if(hasHead != 1 && num != 1){
                String[] str = line.split(',');
                for(int i=0; i< str.length;i++){
                    rstMap.get(i as String).add(str[i])
                }
            }
        }
        for(int i=0;i<params.length();i++){
            map.put(params.getJSONObject(i).getString("name"), rstMap.get(params.getJSONObject(i).getInt("value")))
        }
    }
}
